#!/bin/bash
bashPass="\033[32;1mPASSED -"
bashInfo="\033[33;1mINFO -"
bashFail="\033[31;1mFAILED -"
bashEnd="\033[0m"

# Check number of arguments
files=""
file=""
excludeDirs=""
excludeFiles=""
includeExtensions=""

# Make the assumption that Mac users will be using FreeBSD Get Opt
if [[ "$OSTYPE" == "darwin"* ]]; then
    while [ $# -gt 0 ]; do
    case "$1" in
        -ed= | --exclude-dirs=* )
            excludeDirs="-E $(echo "${1#*=}" | sed -E 's/,/ -E /g')"
            shift
            ;;
        -ef= | --exclude-files=* )
            excludeFiles="-E $(echo "${1#*=}" | sed -E 's/,/ -E /g')"
            shift
            ;;
        -ie= | --include-extensions=* )
            includeExtensions="-e $(echo "${1#*=}" | sed -E 's/,/ -e /g')"
            shift
            ;;
        -h | --help )
                echo -e "$bashInfo Find all .c and .h files with the Amazon copyright in them $bashEnd"
                echo -e "$bashInfo It exports this to a bash array variable called \"files\" $bashEnd"
                echo -e "$bashInfo This script can take in two optional arguments $bashEnd"
                echo -e "$bashInfo -ef= | --exclude-files=:       A comma seperated list of files to exclude $bashEnd"
                echo -e "$bashInfo -ed= | --exclude-dir=:         A comma seperated list of directories to exclude $bashEnd"
                echo -e "$bashInfo -ie= | --include-extensions=:  Any additional exstensions to search for $bashEnd"
                exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
        esac
    done
    # For FreeBSD's version of Getopt, which is the default MacOS version, use fd
    # By default only grab the c and h files. Only grab the files with amazon copyright
    # Need this in a set +/- e so it doesn't exit due to an error on files that fail the grep
    set +e
    files=$(fd -e c -e h $excludeDirs $excludeFiles $includeExtensions --exec grep -lie "copyright (.*) 20\d\d amazon.com")
    set -e

# Making the assumption that anybody else running this is a gnu getopt user
else
    VALID_ARGS=$(getopt -o h,ed:,ef:,if: --long help,exclude-dirs:,exclude-files:,include-extensions: -- "$@")
    eval set -- "$VALID_ARGS"
    while [ $# -gt 0 ]; do
        case "$1" in
            ed | --exclude-dirs )
                # $2 Holds the argument passed after --exclude-files or --ed
                # Use sed to replace the commas with the exclude flag
                if ! [ -z "$2" ]; then
                    excludeDirs="-E $(echo "$2" | sed -r 's/,/ -E /g' )"
                fi
                shift 2
                ;;

            ef | --exclude-files )
                # $2 Holds the argument passed after --exclude-files or --ed
                # Use sed to replace the commas with the exclude flag
                if ! [ -z "$2" ]; then
                    excludeFiles="-E $( echo "$2" | sed -r 's/,/ -E /g' )"
                fi
                shift 2
                ;;

            if | --include-extensions )
                # $2 Holds the argument passed after --exclude-files or --ed
                # Use sed to replace the commas with the exclude flag
                if ! [ -z "$2" ]; then
                    includeExtensions="-e $( echo "$2" | sed -r 's/,/ -E /g' )"
                fi
                shift 2
                ;;

            h | --help )
                echo -e "$bashInfo Find all .c and .h files with the Amazon copyright in them $bashEnd"
                echo -e "$bashInfo It exports this to a bash array variable called \"files\" $bashEnd"
                echo -e "$bashInfo This script can take in two optional arguments $bashEnd"
                echo -e "$bashInfo --exclude-files:       A comma seperated list of files to exclude $bashEnd"
                echo -e "$bashInfo --exclude-dir:         A comma seperated list of directories to exclude $bashEnd"
                echo -e "$bashInfo --include-extensions:  Any additional exstensions to search for $bashEnd"
                exit 0
                ;;
            -- )
                shift
                break
                ;;
            esac
    done
    # Make the assumption that gnu getopt means you're going to use fdfind vs fd
    # By default only grab the c and h files. Only grab the files with amazon copyright
    # Need this in a set +/- e so it doesn't exit due to an error on files that fail the grep
    set +e
    files=$(fdfind -e c -e h $excludeDirs $excludeFiles $includeExtensions --exec grep -liE "copyright (.*) 20[0-9]{2} amazon.com" )
    set -e
fi

# For future FreeBSD users:
# By default if you try and capture this output like you see on the github workflows
# By doing something like files=$(getFiles <ARGS>) it will look like it doesn't work
# This is because on a Mac's default shell this will expand to a single variable
# But on ubuntu's default shell it will expand to an array that can be iterated over
# My recommendation would be to use the raw fd command above.
for file in ${files[@]}; do
    if ! [ -z "$file" ]; then
        echo "$file"
    fi
done
