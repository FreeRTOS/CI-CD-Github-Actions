name: 'spellings'
description: 'cSpell CI spelling check'
inputs:
  path:
    description: 'Path to repository folder to check spellings in.'
    required: false
    default: ./
  exclude-dirs:
    description: "Comma separated list of directories to not spell check"
    required: false
  exclude-files:
    description: "Comma separated list of files to not spell check"
    required: false
  include-extensions:
    description: "Comma separated list of files to match to regex"
    required: false


runs:
  using: "composite"
  steps:
    - env:
        bashPass: \033[32;1mPASSED -
        bashInfo: \033[33;1mINFO -
        bashFail: \033[31;1mFAILED -
        bashEnd:  \033[0m
        stepName: Set-Up The Spell Checker
      name: ${{ env.stepName }}
      id: spell-checker-setup
      shell: bash
      run: |
        # ${{ env.stepName }}
        echo -e "::group::Install Dependencies"

        # Install the Dependencies we need to run the spell-checker
        sudo apt-get install util-linux -y
        sudo apt-get install fd-find -y
        sudo apt-get install npm -y
        sudo npm install -g cspell
        echo -e "::endgroup::"

        # Add the current directory to PATH
        export PATH="$GITHUB_ACTION_PATH:$PATH"

        # cp has an error code if it's asked to copy to the same file
        # Wrap it in a set +e in case the input path is the working directory
        set +e
        cp $GITHUB_ACTION_PATH/cspell.config.yaml ${{ inputs.path }}
        set -e


        # Make sure we have all the commands we need.
        echo -e "${{ env.bashInfo }} fdfind --version ${{ env.bashEnd }}"
        echo -e "${{ env.bashInfo }} cspell --version ${{ env.bashEnd }}"

        # Only reach this line if no errors were hit above
        echo -e "${{ env.bashPass }} ${{ env.stepName }} ${{ env.bashEnd }}"

    - env:
        bashPass: \033[32;1mPASSED -
        bashInfo: \033[33;1mINFO -
        bashFail: \033[31;1mFAILED -
        bashEnd:  \033[0m
        stepName: Spell Checker
      name: ${{ env.stepName }}
      id: run-spell-checker
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        # ${{ env.stepName }}
        #echo -e "::group::${{ env.stepName }}"
        export PATH="$GITHUB_ACTION_PATH:$PATH"


        # Parse the optional inputs
        args=""

        # fd-find uses -E to exclude a file or directory
        if [ -n "${{ inputs.exclude-dirs }}" ]; then
          dirs=" -E "
          dirs+="${{ inputs.exclude-dirs }}"
          dirs="${dirs//,/ -E }"
          args+=" ${dirs}"
        fi

        # fd-find uses -E to exclude a file or directory
        if [ -n "${{ inputs.exclude-files }}" ]; then
          files=" -E "
          files+="${{ inputs.exclude-files }}"
          files="${files//,/ -E }"
          args+=" ${files}"
        fi

        # fd-find uses -e to exclude a file extension
        if [ -n "${{ inputs.include-file-types }}" ]; then
          file_types=" -e "
          file_types+="${{ inputs.include-file-types }}"
          file_types="${file_types//,/ -e }"
          args+=" ${file_types}"
        fi

        # Wrap in a set +e so Github doesn't stop the spell check from running
        set +e
        fdfind -e c -e h -e md ${args} --exec cspell --language-id C --color -c cspell.config.yaml --show-suggestions --show-context
        exitStatus=$?
        set -e

        echo -e "::endgroup::"
        if [ $exitStatus -eq 0 ]; then
          echo -e "${{ env.bashPass }} ${{ env.stepName }} ${{ env.bashEnd }}"
        else
          echo -e "${{ env.bashFail }} ${{ env.stepName }} ${{ env.bashEnd }}"
          exit 1
        fi
