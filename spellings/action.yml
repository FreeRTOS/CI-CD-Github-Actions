name: 'spellings'
description: 'CI spellings check'
inputs:
  path:
    description: 'Path to repository folder to run formatting check for.'
    required: false
    default: ./
  exclude-files:
    description: 'List of comma-separated files to exclude from trailing whitespace check. Eg file1,file2'
    required: false
    default: ''
  exclude-dirs:
    description: 'List of comma-separated directories to exclude from trailing whitespace formatting check. Eg docs,build'
    required: false
    default: ''
  include-extensions:
    description: 'List of comma-separated file endings to include into the spell check. Eg md, dox, build'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - env:
        stepName: Install Spell
        bashPass: \033[32;1mPASSED -
        bashInfo: \033[33;1mINFO -
        bashFail: \033[31;1mFAILED -
        bashEnd:  \033[0m
      name: ${{ env.stepName }}
      id: spell-checker-setup
      shell: bash
      run: |
        #  ${{ env.stepName }}
        echo "::group::${{ env.stepName }}"
        sudo apt-get install spell -y
        sudo apt-get install util-linux -y
        sudo apt-get install fd-find -y

        # This is a 1000+ line log for the install
        # Wrap it in an echo group
        echo "::group::NPM Install"
        sudo apt-get install npm -y
        sudo npm install -g cspell
        echo "::endgroup::"

        echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
        export PATH="$PATH:$GITHUB_ACTION_PATH"

        # cp has an error code if it's asked to copy to the same file
        # Wrap it in a set +e in case the input path is the working directory
        set +e
        cp $GITHUB_ACTION_PATH/cspell.config.yaml ${{ inputs.path }}
        set -e
        echo "::endgroup::"

        # Make sure we have all the commands we need.
        echo -e "${{ env.bashInfo }} which getFiles ${{ env.bashEnd }}"
        echo -e "${{ env.bashInfo }} fdfind --version ${{ env.bashEnd }}"
        echo -e "${{ env.bashInfo }} cspell --version ${{ env.bashEnd }}"

        # Only get to here if everything above passes
        echo -e "${{ env.bashPass }} ${{ env.stepName }} ${{ env.bashEnd }}"

    - env:
        bashPass: \033[32;1mPASSED -
        bashInfo: \033[33;1mINFO -
        bashFail: \033[31;1mFAILED -
        bashEnd:  \033[0m
        stepName: Check Spelling
      name: ${{ env.stepName}}
      id: run-spell-checker
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        #  ${{ env.stepName }}
        echo "::group::${{ env.stepName }}"

        # Add helper script to path
        export PATH="$PATH:$GITHUB_ACTION_PATH"

        # Get all files
        files=$(getFiles --exclude-dirs="${{ inputs.exclude-dirs }}" --exclude-files="${{ inputs.exclude-files }}" --include-extensions="${{ inputs.include-extensions}}")

        # Wrap the check in set +e so it runs against all files
        set +e
        exitStatus=0
        for file in ${files[@]}; do
          cspell --language-id C --color -c cspell.config.yaml --show-suggestions --show-context "$file"
          if ! [ $? -eq 0 ]; then
            exitStatus=1
          fi
        done
        set -e

        echo "::endgroup::"
        if [ $exitStatus -eq 0 ]; then
          echo -e "${{ env.bashPass }} ${{ env.stepName }} ${{ env.bashEnd }}"
        else
          echo -e "${{ env.bashFail }} ${{ env.stepName }} ${{ env.bashEnd }}"
          exit 1
        fi

